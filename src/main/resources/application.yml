spring:
  application:
    name: catalog-service
  datasource:
    username: hongs
    password: 12341234
    url: jdbc:postgresql://localhost:5432/polardb_catalog
    hikari:
      connection-timeout: 2000
      maximum-pool-size:  5
  sql:
    init:
      mode: always
      schema-locations: classpath:sql/schema.sql
  config:
    import: "optional:configserver:"
  cloud:
    config:
      uri: http://localhost:8888
      request-connect-timeout: 5000
      request-read-timeout: 5000
      fail-fast: true
      retry:
        max-attempts: 6 # 최대 재시도
        initial-interval: 1000 # 최초 재시도 지연 시간
        max-interval: 2000 # 재시도 지연 최대 시간
        multiplier: 1.1 # 지연시간 exponential
server:
  port: 9001
  tomcat:
    connection-timeout: 2s
    keep-alive-timeout: 15s
    threads:
      max: 50
      min-spare: 5

springdoc:
  swagger-ui:
    path: /swagger-ui.html
    enabled: true
    disable-swagger-default-url: true
  api-docs:
    path: /v3/api-docs
    enabled: true
  packages-to-scan: com.polarbookshop.catalogservice
  paths-to-match: /**
  default-consumes-media-type: application/json
  default-produces-media-type: application/json

polar:
  greeting: welcome to the local book catalog~!

management:
  endpoints:
    web:
      exposure:
        include: refresh,health,info # HTTP를 통해서 /actuator/refresh 엔드포인트를 노출한다.