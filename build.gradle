plugins {
    // 어플리케이션의 컴파일, 빌드, 테스트 작업을 수립하고 그래들에 자바 지원
    id 'java'
    // 그래들에서 스프링 부트의 지원을 제공하고 사용할 버전을 선언
    id 'org.springframework.boot' version '3.5.0'
    // 스프링에 대한 의존성 관리 기능을 제공
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.polarbookshop' // 카탈로그 서비스 프로젝트의 그룹ID
version = '0.0.1-SNAPSHOT'  // 어플리케이션 기본 버전

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2025.0.0")
    set('testcontainersVersion', "1.19.8")
    set('flywayVersion', "11.9.1")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // actuator
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    // spring cloud config
    implementation 'org.springframework.cloud:spring-cloud-starter-config'
    implementation 'org.springframework.retry:spring-retry'

    // SpringDoc OpenAPI (Swagger)
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.5'
    implementation 'org.springdoc:springdoc-openapi-starter-common:2.8.5'

    // DB
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

    // Flyway
    runtimeOnly "org.flywaydb:flyway-database-postgresql:${flywayVersion}"

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.springframework.boot:spring-boot-starter-webflux'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testImplementation 'org.testcontainers:postgresql'
//    testImplementation "org.testcontainers:testcontainers"
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        mavenBom "org.testcontainers:testcontainers-bom:${testcontainersVersion}"
    }
}

bootRun {
    systemProperty 'spring.profiles.active', 'testdata'
}

tasks.named('test') {
    useJUnitPlatform()
}

bootBuildImage {
    print("${project.name}")
    imageName = "catalog-service"
    environment = ["BP_JVM_VERSION" : "17.*"]

//    docker {
//        publishRegistry {
//            username = project.findProperty("registryUsername")
//            password = project.findProperty("registryToken")
//            url = project.findProperty("registryUrl")
//        }
//    }
}